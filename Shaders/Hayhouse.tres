[gd_resource type="VisualShader" load_steps=18 format=3 uid="uid://dfd5h74mdp1id"]

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_28srp"]
expanded_output_ports = [0]
operator = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_oxnt8"]
input_name = "model_matrix"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_ekhh7"]
default_input_values = [0, 0.0, 1, -0.15, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(1, 1, 1)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_6ptnb"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_28srp"]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_je7o7"]
input_name = "view_matrix"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_oxnt8"]
expanded_output_ports = [0]
operator = 1

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_lx7nh"]
default_input_values = [0, 0.0, 1, 0.2, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(1, 1, 1)]

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_ekhh7"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_3v36i"]
constant = Color(0.23828125, 0.2062972, 0, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_2oc85"]
constant = Color(0.6313726, 0.56623745, 0.49177048, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_mxmq5"]
expanded_output_ports = [0]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_nisim"]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_p4lpa"]
default_input_values = [0, 0.0, 1, -0.3, 2, 0.3]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_hwe1d"]
function = 12

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_bq5ek"]
operator = 3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_2rpdc"]
default_input_values = [0, 0.0, 1, 1.0]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, depth_test_default, cull_back, diffuse_lambert, specular_schlick_ggx;




void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;
	float n_out2p1 = n_out2p0.r;
	float n_out2p2 = n_out2p0.g;
	float n_out2p3 = n_out2p0.b;


// Clamp:5
	float n_in5p1 = -0.30000;
	float n_in5p2 = 0.30000;
	float n_out5p0 = clamp(n_out2p1, n_in5p1, n_in5p2);


// FloatFunc:7
	float n_out7p0 = abs(n_out2p3);


// FloatOp:9
	float n_in9p1 = 1.00000;
	float n_out9p0 = n_out7p0 + n_in9p1;


// FloatOp:8
	float n_out8p0 = n_out2p2 / n_out9p0;


// VectorCompose:4
	vec3 n_out4p0 = vec3(n_out5p0, n_out8p0, n_out2p3);


// Output:0
	VERTEX = n_out4p0;
	COLOR.rgb = n_out2p0;


}

void fragment() {
// Input:11
	mat4 n_out11p0 = MODEL_MATRIX;


// Input:3
	mat4 n_out3p0 = VIEW_MATRIX;


// Input:2
	vec3 n_out2p0 = NORMAL;


// TransformVectorMult:4
	vec3 n_out4p0 = (vec4(n_out2p0, 1.0) * n_out3p0).xyz;


// TransformVectorMult:10
	vec3 n_out10p0 = (vec4(n_out4p0, 1.0) * n_out11p0).xyz;
	float n_out10p2 = n_out10p0.g;


// Distance:6
	vec2 n_in6p1 = vec2(0.00000, 0.00000);
	float n_out6p0 = distance(vec2(n_out10p2), n_in6p1);


// Input:13
	vec4 n_out13p0 = COLOR;
	float n_out13p2 = n_out13p0.g;


// ColorConstant:8
	vec4 n_out8p0 = vec4(0.238281, 0.206297, 0.000000, 1.000000);


// ColorConstant:9
	vec4 n_out9p0 = vec4(0.631373, 0.566237, 0.491770, 1.000000);


	vec3 n_out12p0;
// If:12
	float n_in12p1 = -0.15000;
	float n_in12p2 = 0.00001;
	vec3 n_in12p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out13p2 - n_in12p1) < n_in12p2)
	{
		n_out12p0 = n_in12p3;
	}
	else if(n_out13p2 < n_in12p1)
	{
		n_out12p0 = vec3(n_out9p0.xyz);
	}
	else
	{
		n_out12p0 = vec3(n_out8p0.xyz);
	}


	vec3 n_out5p0;
// If:5
	float n_in5p1 = 0.20000;
	float n_in5p2 = 0.00001;
	vec3 n_in5p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out6p0 - n_in5p1) < n_in5p2)
	{
		n_out5p0 = n_in5p3;
	}
	else if(n_out6p0 < n_in5p1)
	{
		n_out5p0 = vec3(n_out9p0.xyz);
	}
	else
	{
		n_out5p0 = n_out12p0;
	}


// Output:0
	ALBEDO = n_out5p0;


}
"
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_mxmq5")
nodes/vertex/2/position = Vector2(-1220, 60)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorCompose_nisim")
nodes/vertex/4/position = Vector2(160, 120)
nodes/vertex/5/node = SubResource("VisualShaderNodeClamp_p4lpa")
nodes/vertex/5/position = Vector2(-180, -60)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatFunc_hwe1d")
nodes/vertex/7/position = Vector2(-840, 260)
nodes/vertex/8/node = SubResource("VisualShaderNodeFloatOp_bq5ek")
nodes/vertex/8/position = Vector2(-160, 120)
nodes/vertex/9/node = SubResource("VisualShaderNodeFloatOp_2rpdc")
nodes/vertex/9/position = Vector2(-620, 280)
nodes/vertex/connections = PackedInt32Array(4, 0, 0, 0, 2, 1, 5, 0, 5, 0, 4, 0, 2, 3, 4, 2, 2, 3, 7, 0, 2, 0, 0, 6, 8, 0, 4, 1, 2, 2, 8, 0, 7, 0, 9, 0, 9, 0, 8, 1)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_28srp")
nodes/fragment/2/position = Vector2(-1540, 120)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_je7o7")
nodes/fragment/3/position = Vector2(-1500, 0)
nodes/fragment/4/node = SubResource("VisualShaderNodeTransformVecMult_oxnt8")
nodes/fragment/4/position = Vector2(-1160, 0)
nodes/fragment/5/node = SubResource("VisualShaderNodeIf_lx7nh")
nodes/fragment/5/position = Vector2(-160, 40)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorDistance_ekhh7")
nodes/fragment/6/position = Vector2(-460, 0)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorConstant_3v36i")
nodes/fragment/8/position = Vector2(-860, 360)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorConstant_2oc85")
nodes/fragment/9/position = Vector2(-820, 480)
nodes/fragment/10/node = SubResource("VisualShaderNodeTransformVecMult_28srp")
nodes/fragment/10/position = Vector2(-940, -140)
nodes/fragment/11/node = SubResource("VisualShaderNodeInput_oxnt8")
nodes/fragment/11/position = Vector2(-1360, -160)
nodes/fragment/12/node = SubResource("VisualShaderNodeIf_ekhh7")
nodes/fragment/12/position = Vector2(-540, 160)
nodes/fragment/13/node = SubResource("VisualShaderNodeInput_6ptnb")
nodes/fragment/13/position = Vector2(-1360, 260)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 2, 0, 4, 1, 6, 0, 5, 0, 5, 0, 0, 0, 9, 0, 5, 5, 11, 0, 10, 0, 4, 0, 10, 1, 10, 2, 6, 0, 12, 0, 5, 4, 8, 0, 12, 4, 9, 0, 12, 5, 13, 2, 12, 0)
