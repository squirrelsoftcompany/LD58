[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://bnmusn6jaty6d"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_m2oms"]
input_name = "color"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_brlsu"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_nq1cl"]
constant = Color(0.04827237, 0.36328125, 0, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_jvo42"]
constant = Color(0.29296875, 0.10607515, 0, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_k43c5"]
expanded_output_ports = [0]
input_name = "vertex"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_eh2g4"]
default_input_values = [0, 0.0, 1, 0.9, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 1, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_gx7xy"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.6, 3, Vector3(0, 0, 0), 4, Vector3(0, 1, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_3kuu6"]
default_input_values = [0, 0.0, 1, -0.5, 2, 0.0]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_elnhc"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0, 3, Vector3(0, 0, 0), 4, Vector3(0, 1, 0), 5, Vector3(0, 0, 0)]
expanded_output_ports = [0]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_1c7po"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_0auq6"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_2dxj6"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 3

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, depth_test_default, cull_back, diffuse_lambert, specular_schlick_ggx;




void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;
	float n_out2p1 = n_out2p0.r;
	float n_out2p2 = n_out2p0.g;
	float n_out2p3 = n_out2p0.b;


// FloatOp:8
	float n_in8p1 = 2.00000;
	float n_out8p0 = n_out2p1 / n_in8p1;


// FloatOp:9
	float n_in9p1 = 2.00000;
	float n_out9p0 = n_out2p3 / n_in9p1;


// VectorCompose:7
	vec3 n_out7p0 = vec3(n_out8p0, n_out2p2, n_out9p0);


	vec3 n_out6p0;
// If:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 0.00000;
	if(abs(n_out2p2 - n_in6p1) < n_in6p2)
	{
		n_out6p0 = n_out2p0;
	}
	else if(n_out2p2 < n_in6p1)
	{
		n_out6p0 = n_out7p0;
	}
	else
	{
		n_out6p0 = n_out2p0;
	}
	float n_out6p1 = n_out6p0.r;
	float n_out6p3 = n_out6p0.b;


// VectorCompose:5
	float n_in5p1 = -0.50000;
	vec3 n_out5p0 = vec3(n_out6p1, n_in5p1, n_out6p3);


	vec3 n_out4p0;
// If:4
	float n_in4p1 = 0.00000;
	float n_in4p2 = 0.60000;
	if(abs(n_out2p2 - n_in4p1) < n_in4p2)
	{
		n_out4p0 = n_out5p0;
	}
	else if(n_out2p2 < n_in4p1)
	{
		n_out4p0 = n_out6p0;
	}
	else
	{
		n_out4p0 = n_out6p0;
	}


	vec3 n_out3p0;
// If:3
	float n_in3p1 = 0.90000;
	float n_in3p2 = 0.00001;
	vec3 n_in3p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in3p4 = vec3(0.00000, 1.00000, 0.00000);
	if(abs(n_out2p2 - n_in3p1) < n_in3p2)
	{
		n_out3p0 = n_in3p3;
	}
	else if(n_out2p2 < n_in3p1)
	{
		n_out3p0 = n_out4p0;
	}
	else
	{
		n_out3p0 = n_in3p4;
	}


// ColorConstant:11
	vec4 n_out11p0 = vec4(0.048272, 0.363281, 0.000000, 1.000000);


// ColorConstant:12
	vec4 n_out12p0 = vec4(0.292969, 0.106075, 0.000000, 1.000000);


	vec3 n_out10p0;
// If:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 0.00001;
	vec3 n_in10p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out2p2 - n_in10p1) < n_in10p2)
	{
		n_out10p0 = n_in10p3;
	}
	else if(n_out2p2 < n_in10p1)
	{
		n_out10p0 = vec3(n_out12p0.xyz);
	}
	else
	{
		n_out10p0 = vec3(n_out11p0.xyz);
	}


// Output:0
	VERTEX = n_out3p0;
	COLOR.rgb = n_out10p0;


}

void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);


}
"
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_k43c5")
nodes/vertex/2/position = Vector2(-2580, -120)
nodes/vertex/3/node = SubResource("VisualShaderNodeIf_eh2g4")
nodes/vertex/3/position = Vector2(-400, -40)
nodes/vertex/4/node = SubResource("VisualShaderNodeIf_gx7xy")
nodes/vertex/4/position = Vector2(-620, 80)
nodes/vertex/5/node = SubResource("VisualShaderNodeVectorCompose_3kuu6")
nodes/vertex/5/position = Vector2(-1120, 320)
nodes/vertex/6/node = SubResource("VisualShaderNodeIf_elnhc")
nodes/vertex/6/position = Vector2(-1480, 200)
nodes/vertex/7/node = SubResource("VisualShaderNodeVectorCompose_1c7po")
nodes/vertex/7/position = Vector2(-1780, 400)
nodes/vertex/8/node = SubResource("VisualShaderNodeFloatOp_0auq6")
nodes/vertex/8/position = Vector2(-2200, 300)
nodes/vertex/9/node = SubResource("VisualShaderNodeFloatOp_2dxj6")
nodes/vertex/9/position = Vector2(-2200, 460)
nodes/vertex/10/node = SubResource("VisualShaderNodeIf_brlsu")
nodes/vertex/10/position = Vector2(-570.7811, 498.76996)
nodes/vertex/11/node = SubResource("VisualShaderNodeColorConstant_nq1cl")
nodes/vertex/11/position = Vector2(-920, 600)
nodes/vertex/12/node = SubResource("VisualShaderNodeColorConstant_jvo42")
nodes/vertex/12/position = Vector2(-920, 700)
nodes/vertex/connections = PackedInt32Array(2, 2, 3, 0, 3, 0, 0, 0, 4, 0, 3, 5, 2, 2, 4, 0, 5, 0, 4, 3, 2, 2, 6, 0, 6, 1, 5, 0, 6, 3, 5, 2, 6, 0, 4, 4, 6, 0, 4, 5, 2, 0, 6, 4, 2, 0, 6, 3, 7, 0, 6, 5, 2, 1, 8, 0, 8, 0, 7, 0, 9, 0, 7, 2, 2, 3, 9, 0, 2, 2, 7, 1, 2, 2, 10, 0, 11, 0, 10, 4, 12, 0, 10, 5, 10, 0, 0, 6)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_m2oms")
nodes/fragment/2/position = Vector2(-240, 180)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0)
