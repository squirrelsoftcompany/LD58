[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://brtg76uboo5l6"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_m42ut"]
constant = Color(0.234375, 0.0911042, 0.03793944, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_gp0xu"]
constant = Color(0.4140625, 0.2728326, 0.1507041, 1)

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_05vnp"]
default_input_values = [0, 0.1, 1, 0.09, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_y86t2"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_tkag4"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_3wy0h"]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_05vnp"]
expanded_output_ports = [0]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_y86t2"]
default_input_values = [0, 0.0, 1, 1.0, 2, 0.0]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_tn35y"]
default_input_values = [0, 0.9, 1, 0.1, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]
expanded_output_ports = [0]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, depth_test_default, cull_back, diffuse_lambert, specular_schlick_ggx;




void vertex() {
// Input:4
	vec3 n_out4p0 = VERTEX;
	float n_out4p2 = n_out4p0.g;


// VectorCompose:5
	float n_in5p0 = 0.00000;
	float n_in5p2 = 0.00000;
	vec3 n_out5p0 = vec3(n_in5p0, n_out4p2, n_in5p2);


	vec3 n_out8p0;
// If:8
	float n_in8p0 = 0.90000;
	float n_in8p2 = 0.00001;
	if(abs(n_in8p0 - n_out4p2) < n_in8p2)
	{
		n_out8p0 = n_out4p0;
	}
	else if(n_in8p0 < n_out4p2)
	{
		n_out8p0 = n_out5p0;
	}
	else
	{
		n_out8p0 = n_out4p0;
	}


// Output:0
	VERTEX = n_out8p0;
	COLOR.rgb = n_out8p0;


}

void fragment() {
// Input:6
	vec4 n_out6p0 = COLOR;
	float n_out6p1 = n_out6p0.r;
	float n_out6p3 = n_out6p0.b;


// VectorCompose:8
	vec2 n_out8p0 = vec2(n_out6p1, n_out6p3);


// Distance:7
	vec2 n_in7p1 = vec2(0.00000, 0.00000);
	float n_out7p0 = distance(n_out8p0, n_in7p1);


// ColorConstant:2
	vec4 n_out2p0 = vec4(0.234375, 0.091104, 0.037939, 1.000000);


// ColorConstant:3
	vec4 n_out3p0 = vec4(0.414063, 0.272833, 0.150704, 1.000000);


	vec3 n_out5p0;
// If:5
	float n_in5p1 = 0.09000;
	float n_in5p2 = 0.00001;
	vec3 n_in5p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out7p0 - n_in5p1) < n_in5p2)
	{
		n_out5p0 = n_in5p3;
	}
	else if(n_out7p0 < n_in5p1)
	{
		n_out5p0 = vec3(n_out3p0.xyz);
	}
	else
	{
		n_out5p0 = vec3(n_out2p0.xyz);
	}


// Output:0
	ALBEDO = n_out5p0;


}
"
nodes/vertex/4/node = SubResource("VisualShaderNodeInput_05vnp")
nodes/vertex/4/position = Vector2(-1080, -40)
nodes/vertex/5/node = SubResource("VisualShaderNodeVectorCompose_y86t2")
nodes/vertex/5/position = Vector2(-640, 20)
nodes/vertex/8/node = SubResource("VisualShaderNodeIf_tn35y")
nodes/vertex/8/position = Vector2(-280, -240)
nodes/vertex/connections = PackedInt32Array(4, 0, 8, 4, 4, 0, 8, 3, 4, 2, 5, 1, 5, 0, 8, 5, 8, 0, 0, 0, 4, 2, 8, 1, 8, 0, 0, 6)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorConstant_m42ut")
nodes/fragment/2/position = Vector2(-660, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_gp0xu")
nodes/fragment/3/position = Vector2(-660, 200)
nodes/fragment/5/node = SubResource("VisualShaderNodeIf_05vnp")
nodes/fragment/5/position = Vector2(-100, 40)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_y86t2")
nodes/fragment/6/position = Vector2(-1100, -160)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorDistance_tkag4")
nodes/fragment/7/position = Vector2(-600, -120)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorCompose_3wy0h")
nodes/fragment/8/position = Vector2(-780, -160)
nodes/fragment/connections = PackedInt32Array(2, 0, 5, 4, 3, 0, 5, 5, 5, 0, 0, 0, 6, 1, 8, 0, 6, 3, 8, 1, 8, 0, 7, 0, 7, 0, 5, 0)
